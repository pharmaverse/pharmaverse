[{"url":"https://pharmaverse.org/charter/","title":"Our Charter","description":"Charter for pharmaverse covering our high level objective and scope, along with recommendations for new collaborations.","content":"About The pharmaverse is a connected network of industry individuals working together in collaboration to achieve the below objective. We are not a consortium nor organisation, and we have no binding links to any other industry group. We receive no funding and all contributors do so of their own accords and represent their own ideas, not those of any single company. Any legal counsel comes from legal representatives from any organisations of our council members.\nObjective The objective of pharmaverse is to bring together a collection of pharmaceutical industry representatives to agree on a curated subset of open-source software packages and codebases, which would be based on the R language and those that we believe are the most suitable for the industry to adopt in order to deliver the clinical data pipeline. If suitable tools do not already exist within the open-source ecosystem, these gaps can be identified. Then via collective collaboration (around development and testing), new solutions may be developed with the aim to reduce duplication of efforts and gain increased harmonization to the way we work across the industry.\nThere would be no commercial interest from contributors to any of these efforts, as all code will be targeted for open-source release under a permissive license.\nThe benefits would be as follows:\n Industry collaboration leading to more robust and well-thought-out solutions with shared development and maintenance efforts, thus distributing the cost and burden across multiple organizations Greater potential to bring unified solutions to regulators demonstrating collaboration between industry and standards organization to form workable solutions Better enablement of our medicines to reach patients and society faster through the pooling of skills and talents and accelerating how the industry generates insights from patients’ data - and to do this in a more sustainable way Attraction of the next generation of great software developers and data scientists to Pharma and providing increased transparency of our industry  Scope The initial focus of pharmaverse is on the journey from CRF through to submission for clinical trial analysis reporting via R packages. We intend to provide a pathway to share efforts to build open-source codebases, to identify and rectify gaps in available tools, and then collaboratively build and maintain any additional codebases that complete this end-to-end workflow. This could include, for example, solutions covering SDTM mapping, ADaM derivations, TLG production, and enabling eSub for both today\u0026rsquo;s expectations and potentially through interactive tools in the future. It also could include utility packages that may help this dataflow in any way, such as diffdf, which performs data frame comparisons.\nThe R packages recommended under pharmaverse will fall under one of the following:\n   Category Description Examples     External to pharma Transcends specifically pharma needs tidyverse   Pharma-specific independent of pharmaverse Created for use in pharma, but not necessarily following the pharmaverse charter and recommendations rtables, xportr   Pharma-specific under pharmaverse Created for use in pharma, following the pharmaverse charter and recommendations admiral    The aim will not be to agree on cross-industry implementations of CDISC standards, as each company may have their own repositories of chosen implementation rules and specifications. Any open-source package or codebase would knowingly act as a starting point for code re-use, yet will never be able to cover all eventualities. By following this principle, we would allow the framework to take on a level of standard agnosticism, which improves the likelihood of remaining future-proof.\nThe pharmaverse environment should be easily locatable and accessible via a single site. Some packages will already exist on CRAN or GitHub, whereas others are either in ongoing development or brand-new packages that will come from future pharmaverse collaborations. For the already open-source released packages, we could collate and explain clear use cases for clinical trial reporting. Some may cover similar purposes (e.g. there are numerous offerings for TLGs) so we should attempt to share the differences and unique merits to help a company or user choose which packages or tools they might adopt.\nContributions There are different levels of commitment companies and individuals can make towards pharmaverse, as detailed below:\n   Commitment Level Description     Council representative Strategy and decision-making body across pharmaverse   Working group member Support selection of pharmaverse preferred packages in dedicated SME areas   Package co-lead Lead and maintainer for a specific pharmaverse package or codebase   Individual contributor Development contributor to any pharmaverse package or codebase    The added benefits of contributing to pharmaverse range from an individual having the opportunity to share their code wider and make new connections across the industry, through to a company getting early awareness and access to prototyping and influencing future solutions.\nDevelopment Contributing to pharmaverse is open to all organizations working within the clinical trial analysis pipeline, creating relevant code. An inclusive model will be used to help identify gaps and, from this endorsement, active participation on individual codebase gaps (like the admiral project) are on an opt-in basis, i.e. just because a company contributes to certain pharmaverse projects it doesn’t mean you have to contribute to all.\nThe pharmaverse recommendation is for all our new code collaborations to be hosted under github.com/pharmaverse. This forms a neutral home for all open-source repos falling under our scope. The admins of this org would include pharmaverse council members.\nThe preferred model of development of new pharmaverse offerings would be to initiate projects as open-source from the start of development or as soon as a stable first draft is available. This is coupled with an expectation of engagement of other companies in ongoing testing and possibly via supporting development efforts with pull requests/issues/feedback. This way we result in more robust code for which many companies have already engaged with during the development process, and it has a higher chance of successful embedding. In addition, the open and transparent development reduces the chance of others creating duplicative parallel packages.\nFor more information on development guidance and requirements, see the minimum inclusion criteria and recommended practices available via our Package co-lead guidance.\nRisks \u0026amp; Testing Each respective company should decide whether legal contracts or collaboration agreements are required. Any company involved should be free to decide to withdraw from any pharmaverse collaboration at any stage.\nTesting of any code has to be a key consideration. Packages initiated to fill gaps in the pharmaverse will need to meet the required standards as outlined in our Package co-lead guidance. It will also be necessary to make available any evidence generated on the reliability and methods executed, as this transparency would in turn encourage wider engagement and adoption of the package.\nLiability for the reliability of the pharmaverse environment remains with the users, but to help limit risk, package dependencies should be intentionally limited to the most necessary, such as selected tidyverse packages.\nFor any co-development effort, there should be no need to access any other company’s systems and no individual company patient-level data should be shared.\nGovernance \u0026amp; Maintenance The pharmaverse recommendation is for the control of the main branch of any package repo to be limited to a small number of “Package co-leads”, preferably from different companies, that have a shared need to invest in a common solution. Each respective development team is ultimately responsible for planning the ongoing maintenance strategy, but representatives to support this could come in from other companies, such as those involved in testing. Feedback or pull requests could come from any “Individual contributor”.\nIf you imagine the case of a codebase (as opposed to a single package), then a similar model to Wikipedia could be imagined, where numerous representatives from across companies each take responsibility to “garden” a domain and ensure any user contributions are appropriate to be accepted into the codebase.\nCommunications Each development team will agree a cadence for their own releases and specific targeted communications. The council should then supplement this with an aligned method of regularly communicating iterations of the pharmaverse environment out to the industry, as well as the wider community of Open Pharma aligned projects.\nTiming Why is now the right time for this? The industry has never been more conducive to cross-company collaboration (considering efforts like PHUSE, TransCelerate, Accumulus Synergy, and more). Nowhere was this witnessed more than in how the industry and regulators partnered to develop guidance with urgency around how to manage the impact of the COVID-19 pandemic. Furthermore, in the field of clinical reporting, we stand at a possible unique point in time where many companies are starting to embrace alternatives to what has been their programming language of choice for 30+ years, by integrating open-source languages such as R. At this juncture, we have the opportunity not to all take separate routes on this journey, as may have been done before. The pharmaverse offers a chance to come together collectively as an industry at a magnitude that’s never been seen before in clinical study programming. Our patients are waiting and expecting.\n"},{"url":"https://pharmaverse.org/contribute/ic/","title":"Individual contributor","description":"","content":"Individual contributors will encompass the majority of our community and encapsulates those using and contributing to the development of any pharmaverse package. Examples of how you could get involved to help us achieve our vision:\n Use existing recommended packages and advocate usage within your organisation Raise feedback via Issues for areas where you find potential package enhancements or bugs For those packages with an open contribution model, develop new functionality and make pull requests to make your code available for re-use For new pharmaverse package collaborations, volunteer for user testing to help the development team build robust solutions  To help you find suitable open source packages to contribute your skills toward, check out openpharma.pharmaverse.org. Here you can see a range of open issues where people are asking for support via \u0026ldquo;good first issue\u0026rdquo; or \u0026ldquo;help wanted\u0026rdquo; GitHub issue labels. If you\u0026rsquo;d like to contribute to any, then open up the respective issue and add a comment so that the author or development team could help arrange any required access/onboarding to help you get started. Over time, you might even make the Leader Board!\nIt can feel daunting getting involved initially in open source, so we asked our community for tips and here\u0026rsquo;s what they shared:\n If you are new to R package development or Git/GitHub then there are freely available resources to help you learn like R Packages book, Git tutorial or GitHub interactive course Start small (e.g. a single package, single issue) and in an area you feel most comfortable with from your past experience. Taking on something small like updating a unit test program or some documentation can be a simpler way to build confidence versus jumping into building functions If you\u0026rsquo;d ever like to practice a dummy contribution, then the {admiral} package offers this issue - just add a comment there to express interest and you could get assigned repo write access to be able to try it out Finally and most importantly, please don\u0026rsquo;t be afraid that your code will be judged publicly! If you make a mistake it\u0026rsquo;s absolutely OK - most people do at the start, and that\u0026rsquo;s what Pull Request reviews are there for. The other developers on the package will help advise you  Remember, you don\u0026rsquo;t need to be an expert R package developer to contribute, you just need to be passionate and willing to share your time! We\u0026rsquo;re sure you\u0026rsquo;ll get a lot back from the experience.\n"},{"url":"https://pharmaverse.org/e2eclinical/sdtm/","title":"SDTM","description":"","content":"According to CDISC: SDTM provides a standard for organizing and formatting data to streamline processes in collection, management, analysis and reporting. Implementing SDTM supports data aggregation and warehousing; fosters mining and reuse; facilitates sharing; helps perform due diligence and other important data review activities; and improves the regulatory review and approval process.\nSDTM is one of the required standards for data submission to FDA (U.S.) and PMDA (Japan).\nsdtmchecks       Contains data check functions to identify SDTM issues that are generalizable, actionable, and meaningful for analysis\n datacutr         Applying a datacut to SDTM\n Upcoming packages for consideration The following are being worked up towards open sourcing to be considered for later inclusion into the pharmaverse - we felt important to share here in case others are working in a similar space and would be interested to collaborate with the respective developers.\nroak     SDTM mapping algorithms via R functions OPEN SOURCE RELEASE EXPECTED IN 2024 Contact Ram Ganapathy (ganapar1@gene.com)\n In addition, a collaboration of 7 companies is being formed to tackle \u0026ldquo;Open Source test data generation\u0026rdquo; for SDTM mapping via an R package. it would be focused on test data from EDC systems that is needed to test SDTM mapping.\n"},{"url":"https://pharmaverse.org/e2eclinical/adam/","title":"ADaM","description":"","content":"According to CDISC: ADaM defines dataset and metadata standards that support:\n efficient generation, replication, and review of clinical trial statistical analyses, and traceability among analysis results, analysis data, and data represented in the Study Data Tabulation Model (SDTM).​  ADaM is one of the required standards for data submission to FDA (U.S.) and PMDA (Japan).\nOur recommended packages for ADaM belong to the admiral family of packages. These consist of a core package covering common analysis needs and a growing suite of therapeutic area specific package extensions.\nadmiral       (ADaM In R Asset Library) - Modular framework to generate ADaM via R functions relying on community contributions\n admiralonco         Oncology\n admiralophtha         Ophthalmology\n admiralvaccine         Vaccines RELEASE EXPECTED ~2023\n "},{"url":"https://pharmaverse.org/contribute/lead/","title":"Package co-lead","description":"","content":"Ownership\nThe responsibilities of package co-leads or leads (both for new or existing packages) would be to decide the strategy for the package, such as scope, contribution model, testing, governance, maintenance and communication planning. For each of these points there exists high level guidance and pharmaverse recommendations within our charter, but the owners of the package have full control over such decisions. Pharmaverse is not a consortium that owns or maintains these packages.\nWe openly welcome developers of existing packages or those initiating new packages to reach out to us.\nIn order for pharmaverse to be truly successful we need to encourage that any gaps in the end-to-end clinical reporting flow are addressed by new collaborative efforts, rather than many individual companies addressing the same problem in isolation - which at worst ends with private code and at best ends with a proliferation of open source code all doing the same thing.\nSo we actively encourage individuals or organisations that have a new idea or an existing R package within our pharmaverse scope to contact our council representatives, so that we can help you initiate a new collaboration with like-minded other individuals. We can also connect you with others that would be willing to contribute to testing your package as you progress development.\nBefore you contact us, please consider whether there is already an existing pharmaverse package that could solve your need, or if you could combine forces with an existing effort to add your feature to their package. Our aim is always to reduce duplication across our packages, so as to provide a lower bar for pharmaceutical companies to adopt R. With this in mind, expect that we would say no to including a new package in pharmaverse unless it offers unique features and scope compared to the packages already included.\nNote: we refer to R \u0026ldquo;packages\u0026rdquo; here, but you may also have other useful pieces to share (outside of packages) that enable R, such as CI/CD workflows, utility scripts or templates.\nInclusion Criteria for pharmaverse\nIf you would like to see your package included in pharmaverse, starting in January 2023 pharmaverse will have new minimum inclusion criteria:\n  Hosting and Licensing\n Packages must have an acceptable open source license, preferably permissive unless a packaged dependency requires a copy-left license is used. The recommended license of pharmaverse at this point in time is the Apache License Version 2.0. Source code must be hosted publicly, preferably on GitHub. Wherever hosted, there must be a place to publicly report issues. We encourage new package collaborations to use the pharmaverse GitHub organization where possible.    Documentation\n Pharmaverse packages must be well documented. All exported function must have function documentation and pass R CMD documentation requirements. Packages should have a package website available, with vignettes documenting contextual use of the package code. A hex logo is preferable and we recommend a high resolution PNG here with no background whitespace and flat vertical edging.    Version Compatibility and Dependencies\n Pharmaverse packages should have a Continuous Integration (CI) action to test R CMD Check against the latest R version. It can also be a good convention to consider adding some extra workflows for recent R versions, but this is not required. Incremental, semantic versioning should be used. We recommend following the strategies detailed in R Packages Dependency packages to install will be determined by the team and will be clearly documented. When using these, bundling of other package\u0026rsquo;s source code should be avoided where possible. Package dependencies should be intentionally limited to the most necessary, such as selected tidyverse packages    Support and Maintenance\n To stay included in pharmaverse, packages must be actively maintained - by this we mean monitoring user-raised issues and addressing bug fixes within a reasonable timeframe, even if no planned active development for a stable package.  If a package is started in the pharmaverse, then a maintenance strategy can be organized within participating pharmaverse organizations. If a package is included in pharmaverse but owned by a individual organization, then that organization is responsible for ensuring the package is maintained. Lack of maintenance of a package will result in the package being removed from pharmaverse. If an organization no longer wishes to maintain a package, but it is crucial to the pharmaverse, then another contributing organisation within the pharmaverse may accept moving the packages under the pharmaverse GitHub organization and taking on maintenance.   The main branch of the package repository must be protected, and a separate development branch should be used. A restricted set of maintainers should have authority to admit changes to the main branch. The main branch of the package should additionally have extra CI automated testing for package releases.  For example, testing R CMD Check on Windows, Linux, and MacOS. This could also be achieved via the CRAN checks See tips and possible re-use on our Developers page      CRAN Acceptability\n Being admitted on CRAN gives confidence of a level of maturity of the package and may help for it to be viewed more favourably for industry adoption, but is not a stringent requirement as some package developers have rationale not to pursue a CRAN submission. If admitted to CRAN, the package must stay on CRAN.  Note: If a pharmaverse package is archived due to the archival of a dependency, we understand that is not the fault of the pharmaverse package authors. That said, if a dependency becomes a systemic problem, steps should be taken to eliminate that package as a dependency      If you meet all of the above criteria, one of our respective working groups will review your package and determine whether the scope is suitable and the package adds sufficient value to pharmaverse.\nWe additionally have other recommended development practices, that while not required are encouraged for new pharmarverse packages or new package collaborations.\n The development team should agree on a similar style of programming for which the pharmaverse site will offer non-binding recommendations (e.g. lintr compatible and with a common vocabulary for pharma-specific standards like CDISC object naming), so as to achieve a consistent look and feel across modules. Note whilst this would be advantageous for new code from the point of launching pharmaverse onwards, it would be unrealistic to expect any existing packages to rework their code base to accommodate this. Where relevant, development efforts would use synthetic CDISC data (see our Developers page), and then users from each developer or tester company could optionally take the code modules back to their own restricted systems to test out using their data. The learnings from testing would be shared openly, without sharing any patient information. For co-developed packages, development should be done in a shared development area to ensure a consistent environment. This could be a through the use of renv, or a Docker container based upon a custom-built Docker image running an agreed R version. There should be no specific tie to any company-specific statistical computing environment or internal validation/qualification process. Packages in pharmaverse are intended to be suitable for any company\u0026rsquo;s environment or process. If binding tightly to company process or standards, the package scope may be too broad.  For other best practices, we encourage you to follow guidance from both R Packages and rOpenSci. Pharmaverse does not have strict style requirements, but we encourage package authors to follow the Tidyverse style guide.\nNew Collaborations\nFor new package collaborations, beyond our charter we also offer the following to help you get started:\n A collaboration contract template - as you see there our recommendation is to target permissive licensing (such as MIT or Apache 2.0), but this is only a template and all decisions need to be considered with the respective legal groups of the companies involved. A GitHub template focused on the {admiral} family of packages and their conventions, but could be useful as an example of possible approaches to use, such as Issue and Pull Request templates. Our Developers page offers packages and resources that could be re-used when creating new pharmaverse packages. Example contribution model - this is what is used for the {admiral} package and includes vignettes around programming strategy, unit testing guidance and git usage. This model will evolve over time as the admiral team learn from the experience, but could serve as an example to consider if you will open your package for contributions, which we would recommend. Recommended support model - this is important to give users a consistent experience across pharmaverse packages, and if packages are not kept well maintained and supported then they are likely to be removed from the pharmaverse package list. Option to include a pharmaverse hosted shield/badge for your package which shows users you are part of pharmaverse thus adding an extra level of credibility.  "},{"url":"https://pharmaverse.org/e2eclinical/","title":"End-to-End Clinical Reporting Packages","description":"A curated set of R packages that make up the pharmaverse core.","content":"This list encapsulates all the open source R packages we have found that fall under the scope of usage for end-to-end clinical reporting in pharma. Over time the pharmaverse council will endeavour to curate this into an “opinionated” stack.\nWe recommend users to also check out our end-to-end examples as these show how the various packages listed can be used in conjunction to solve common clinical reporting challenges.\n"},{"url":"https://pharmaverse.org/e2eclinical/tlg/","title":"TLGs","description":"","content":"TLGs (tables, listings, and graphs - also known as TLFs/TFLs with F for figures) refer to the packages that take data, and convert then into a human intepretable insight.\nThere are two relevant stages of TLGs - static TLGs, which as of today are the only type of evidence submitted to regulatory bodies, and interactive TLGs, which are predominantly, but not limited to, shiny apps.\nFor tables, we recommend the effort from R Consortium - Tables in Clinical Trials with R - as a useful read to compare examples from several of the below packages.\nTables rtables         A framework for declaring complex multi-level tabulations and then applying them to data\n chevron         Holds TLG template standards to create standard outputs for clinical trials reporting with limited parameterisation.\n pharmaRTF         Enhanced RTF wrapper written in R for use with existing R tables packages such as huxtable or GT\n Tplyr         To simplify the data manipulation necessary to create clinical reports\n cards     Construct CDISC Analysis Results Dataset (ARD) objects\n tfrmt         A language for defining display-related metadata to automate the transformation from an Analysis Results Dataset (ARD) to a table\n tfrmtbuilder     A Shiny app interface for the {tfrmt} package\n tidytlg         Generate table, listings, and graphs (TLG) using the Tidyverse\n Listings rlistings     A framework for creating data listings\n Plots ggsurvfit         Eases the creation of time-to-event (aka survival) summary figures\n While ggplot2 is a lower level, non-pharma specific plotting package. It is universally accepted as the package for graphics, so included here and as a non-pharma package.\nggplot2     An implementation of the Grammar of Graphics in R, and the most popular plotting package for static plots in R.\n Interactive tidyCDISC         A shiny app to easily create custom tables and figures from ADaM-ish data sets\n rhino     Supports creating and extending enterprise Shiny applications using best practices\n Frameworks The following frameworks allow for the engine used to generate the output to be modified. For example, they could be used with ggplot2, rtables, plotly, or Tplyr.\ntern         Layers analytics from descriptive summaries to more complex statistics on top of the foundational table layouts, analytic and content controls\n teal         Framework developed that leverages the R Shiny package to scale development of our shiny apps\n Tables, Listings, and Graphs Catalogs with many examples are available here:\n TLG Catalog Biomarker Catalog  There are publicly available example Shiny applications created using these:\n The efficacy APP Efficacy The safety APP Safety The exploratory APP Exploratory  Upcoming packages for consideration The following is being worked up towards CRAN submission to be considered for later inclusion into the pharmaverse - we felt important to share here in case others are working in a similar space and would be interested to collaborate with the respective developers.\nfalcon     Implementation of table-generating functions to implement standard FDA Safety Tables according to the guidelines. NOTE there is a planned rename of this package before being submitted to CRAN.\n "},{"url":"https://pharmaverse.org/contribute/wg/","title":"Working Group member","description":"","content":"Our working groups are detailed below with their respective mission statements. All members are listed towards the bottom of our homepage, except for the R Adoption WG which we expect will grow quite large as a network of many different company representatives and we expect membership to be fluid.\n Data engineering WG (lead: eli.miller@atorusresearch.com) - To coordinate and evaluate the efforts of open source developers working on data workflows and bridge the gaps between the needs of stakeholders and existing tools for data solutions. TLG and interactive tools WG (lead: mike.stackhouse@atorusresearch.com) - To govern the inclusion of tables/listings/graphs and interactive tool packages. Technology and templates WG (lead: ross.farrugia@roche.com) - To provide the ecosystem that brings together the end-to-end component of pharmaverse and give users an easy journey to finding what they need. Examples of how we’ll achieve this include governing the non-data/TLG WG packages, maintaining the website, and enhancing our end-to-end examples via both our efforts and community contributions. R Adoption WG (lead: juha-pekka.perttola@roche.com) - To bring together R enablement/strategy leads for clinical reporting from pharmaceutical companies to knowledge share through the challenges of embedding R usage in this space. Understanding each of our aims, progress and gaps with R adoption will help to influence future opportunities for open source collaborations.  Some guiding principles are as follows:\n The council will look to rely on specialist experts from the working groups to make recommendations on which packages to include and identifying gaps in the pharmaverse. The Data engineering WG covers areas such as SDTM and ADaM, the TLG WG covers TLGs and interactive apps, and the Technology WG covers any other packages and our website The members of each group are empowered to agree on any additional scope, objectives and deliverables We should not duplicate efforts from any other industry working groups  Membership is not linked to any specific organizations. Any individual is able to join our pharmaverse working groups, as long as able to add value in the required area.\nIf you are interested in joining any working group, reach out to the respective WG lead, as they would have final say on who joins.\n"},{"url":"https://pharmaverse.org/nonpharma/","title":"Other Useful Packages","description":"Packages that are key to the pharmaverse, but transcend end-to-end clinical reporting.","content":"This list covers the wider purpose R packages that we have found most useful and those that most commonly form dependencies to the pharma-specific packages.\nAnother useful reference is this document from the R Foundation titled Regulatory Compliance and Validation Issues - A Guidance Document for the Use of R in Regulated Clinical Trial Environments, which shows a list of base and recommended R packages.\n Tables There is a current industry working group ongoing effort around tables and the advantages of different packages here, which will result in a paper. In general, the problem is best divided into the following categories:\nTable Creation flextable     Creates tables for HTML, PDF, Microsoft Word and PowerPoint documents from R Markdown\n gt     Easily generate information-rich, publication-quality tables from R\n huxtable     An R package to create styled tables in multiple output formats, with a friendly, modern interface.\n mmtable2     Create and combine tables with a ggplot2/patchwork syntax.\n Formatting and Rendering There are different solutions already available, but during R/Pharma there was an announcement of the RStudio package tgen to solve the rendering problems consistently.\n Graphs ggplot2     An implementation of the Grammar of Graphics in R, and the most popular plotting package for static plots in R.\n viridisLite     Colorblind-Friendly Color Maps for R\n  Utilities tidyverse     Set of packages with a common API for data manipulation and TLGs (includes dplyr, ggplot2, etc)\n diffdf     The diffdf package is designed to enable detailed comparison of two data.frames.\n lintr     Static code analysis for R that checks adherence to a given style, syntax errors and possible semantic issues\n styler     Pretty-prints R code without changing the user\u0026#39;s formatting intent\n renv     Helps you create reproducible environments for your R projects\n  Statistical packages It would be impossible to capture all the relevant statistical packages, as there are potentially thousands of potential methods that could be applied in a study. Below we include a handful that are likely to be used in the majority of trial reporting events, and refer to the Cran Task Views (CTVs) that attempt to maintain a landscape of available packages other several important domains.\nstats - Base R package with a lot of functionality useful for design and analysis of clinical trials\nsurvival - Core survival analysis routines\ncar - R companion to applied regression\nemmeans - Estimated marginal means, aka least-squares means\nmmrm - Mixed models for repeated measures (link)\nlme4 - Fit linear and generalized linear mixed-effects models\nlmerTest - Tests in linear mixed effects models\nbroom - takes the messy output of built-in functions in R and turns them into tidy tibbles\nVGAM - Vector generalized linear and additive models\nIt is also worth attracting attention here to the wider CTVs across several pertinent topics, such as:\nClinical Trials, Survival, Bayes, Missing data, and PK.\n As you can appreciate with R such an ever-evolving language we would never be able to include and maintain a complete list of all recommended packages here, but we hope that this page helps to introduce to some of the most common packages used both within and beyond pharma.\n"},{"url":"https://pharmaverse.org/contribute/council/","title":"Council representative","description":"","content":"Council Structure\nThe initial Council was comprised of 1 representative from each of Roche, GSK, Atorus, and Janssen/J\u0026amp;J. During 2023 and 2024, the Council expanded by 3 organizations, the first being Novo Nordisk followed by Appsilon and Sanofi. Each council member puts forward one representative for a 2-year commitment. At the start of each subsequent year, any Council member organization with an expiring commitment may remain on the Council with a renewed 2-year commitment. If a Council member organization leaves, they will be replaced by another Organization with one representative and a 2-year commitment. There is no restriction on the type of organization that may be part of the Council (e.g., pharma, CRO, vendor, or regulatory). In the event of a vacancy on the Council, any Council member may nominate a replacement organization to fill the vacancy. Alternatively, anyone could reach out to any Council member to apply. Acceptance to the Council 2-year term is granted by the existing council, inclusive of outgoing membership.\nIt is expected that a Council member organization contribute:\n One representative to the Council Commitment to at least 2 open source packages under pharmaverse via reviews, hands-on code development, product leads, or other roles which contribute to the design, development, testing, release, and/or maintenance  Council Activities\n(What does the Council do?)\n Renders (or delegates the rendering of) the \u0026lsquo;curated\u0026rsquo; element of \u0026lsquo;a curated set of packages\u0026rsquo; Sets the strategy for pharmaverse Governs packages within the pharmaverse: What\u0026rsquo;s in and what\u0026rsquo;s out; What\u0026rsquo;s recommended to practitioners and what’s not; Sets the requirements for a package to be included in the pharmaverse Support organizations developing candidate packages Provides guidance on release train planning (ongoing maintenance, development and release): Determines the platform(s) to distribute code; Oversees the Communications plan for new package releases (including new versions) Initiates projects or workshops Pursues regulatory engagement to advance the pharmaverse initiative Provides oversight for managed contracts for collaborations - to ensure no conflicts – NOT LEGAL GUIDANCE! Leads by example – models Development Team structure and collaborative model Determines the course of the \u0026lsquo;pharmaverse\u0026rsquo; as an entity:\tDoes it become a stand-alone organization? Does it require funding?\tShould it be self-sufficient? Helps new open source contributors find projects they may support  Any decision rendered by the Council will be determined by majority vote of the Council membership where at least 60% of the Council is present. In the event of a tie, keep talking and figure it out.\nCouncil Meetings\n Monthly - 1h agenda from topics as described above (to be determined by Council members) From start of 2023, summary minutes will be posted openly here There is an expectation of Council member action items to be completed between Council meetings  "},{"url":"https://pharmaverse.org/e2eclinical/esub/","title":"eSub","description":"","content":"eSubs (eSubmissions) refers to the tools used to help submit electronic Common Technical Documents (eCTD) to regulatory bodies.\nxportr         Serves as a single tool to create SAS transport files and perform pharma specific dataset level validation checks\n pkglite         To represent and exchange R package source code as text files, e.g. readable code\n "},{"url":"https://pharmaverse.org/contribute/","title":"Contribute","description":"Ways in which you could contribute to the pharmaverse - for new or existing packages.","content":"As detailed in our pharmaverse charter there are numerous ways to get involved to support depending on contribution level. These include Individual contributor, Package co-lead, Working Group member, or Council representative.\nThese pages include more detailed guidance and expectations for each.\n"},{"url":"https://pharmaverse.org/support/","title":"Support","description":"How to get support for pharmaverse packages.","content":"Packages For all pharmaverse packages we recommend to use the following for support and communications between user and developer communities:\n Slack - for informal discussions, Q\u0026amp;A and building user community GitHub Issues - for direct feedback, enhancement requests or raising bugs  Here\u0026rsquo;s our guidance when using these to ensure support is managed in a consistent way across packages:\n   Package Developer Guidance User Guidance Naming Conventions     Join pharmaverse.slack.com using link and set up an open channel for your package and set up notifications. You may also wish to set-up private channels here for other purposes such as only for development or testing teams Join pharmaverse.slack.com using link and the channels of any package you are using and set up notifications Slack user channel: use package name, e.g. admiral; Dev team: add “_dev”, e.g. admiral_dev; Testing team: add “_testing”, e.g. admiral_testing   Ensure package GitHub repos are open for users to raise issues, then monitor and respond. If changes will not be made add an explanation as to why. If you think someone from the user community could help with an issue then tag as per the naming convention Include as much detail as possible when raising a GitHub issue in a package repo to help the development team understand. If the package allows for contributions (look out for the naming convention tags) consider offering to help make the fix Tags of “help wanted” or “good first issue” for those GitHub issues open for collaboration    We prefer these tools are all used in the public setting (rather than using internal company-specific versions) so that support is not limited to any one company, in the spirit of the open source vision of pharmaverse. However, all must remember no patient level data or company sensitive information should be shared via any of these open public channels. Admittedly, this does make it more difficult to share a minimally reproducible example which usually facilitates quicker issue resolution, but the code could still be shared with an explanation of the data scenario causing the issue. We believe this is a relatively small price to pay for the greater benefits of increased industry collaboration.\nUsing a consistent support model will allow users to have a similar experience from package to package, thus increasing confidence in the individual packages and the collective as a whole. Most importantly though, it will foster natural user communities to form where support no longer needs to come only from developers, as users from any background can help each other.\nThe onus is always on the developers to encourage the community to grow by ensuring that the support system is working. As if for example, a user posts a question to Slack or requests an enhancement via a GitHub issue and it gets no response, then this is not going to instil trust for them and other users to want to engage with this package in future.\nGeneral If you need any support around pharmaverse itself in general then you can use the “general” channel in our Slack.\nOtherwise, please reach out directly to one of our council reps via the contact details listed at the bottom section of the front page of our website.\nCode of Conduct In all of our communication and support channels, please follow the Slack community code of conduct. If anyone is in violation of this code or in any way deemed to be acting against the good intentions of pharmaverse, then the council reps may take action to remove individuals from community channels.\n"},{"url":"https://pharmaverse.org/contribute/badges/","title":"Hosted badges/shields for packages","description":"","content":"For packages we include in the pharmaverse, we generate and host shields/badges that the package authors are free to use on their packages.\nThere is no requirement to use these badges, and we reserve the right to stop hosting the the badge if the package is deemed to no longer be relevant to the pharmaverse.\nTo use, just copy and paste the markdown code in the column \u0026lsquo;Markdown\u0026rsquo; for the package you are a maintainer of. Note - we provide svg \u0026amp; png badges. The example in the tables is the SVG badge, but you can swap .svg for .png.\nExample You can see an example of the badge in use on the thevalidatoR GitHub repo.\nThe shields  body{background-color:white;}   html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gflnvsbvwl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gflnvsbvwl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gflnvsbvwl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gflnvsbvwl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #gflnvsbvwl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gflnvsbvwl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gflnvsbvwl .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gflnvsbvwl .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gflnvsbvwl .gt_column_spanner_outer:first-child { padding-left: 0; } #gflnvsbvwl .gt_column_spanner_outer:last-child { padding-right: 0; } #gflnvsbvwl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gflnvsbvwl .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gflnvsbvwl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gflnvsbvwl .gt_from_md  :first-child { margin-top: 0; } #gflnvsbvwl .gt_from_md  :last-child { margin-bottom: 0; } #gflnvsbvwl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gflnvsbvwl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #gflnvsbvwl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gflnvsbvwl .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #gflnvsbvwl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gflnvsbvwl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gflnvsbvwl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gflnvsbvwl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gflnvsbvwl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gflnvsbvwl .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #gflnvsbvwl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gflnvsbvwl .gt_sourcenote { font-size: 90%; padding: 4px; } #gflnvsbvwl .gt_left { text-align: left; } #gflnvsbvwl .gt_center { text-align: center; } #gflnvsbvwl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gflnvsbvwl .gt_font_normal { font-weight: normal; } #gflnvsbvwl .gt_font_bold { font-weight: bold; } #gflnvsbvwl .gt_font_italic { font-style: italic; } #gflnvsbvwl .gt_super { font-size: 65%; } #gflnvsbvwl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; }   Package Shield Markdown   admiral  [\u0026lt;img src=\"http://pharmaverse.org/shields/admiral.svg\"\u0026gt;](https://pharmaverse.org) admiralonco  [\u0026lt;img src=\"http://pharmaverse.org/shields/admiralonco.svg\"\u0026gt;](https://pharmaverse.org) admiralophtha  [\u0026lt;img src=\"http://pharmaverse.org/shields/admiralophtha.svg\"\u0026gt;](https://pharmaverse.org) admiralvaccine  [\u0026lt;img src=\"http://pharmaverse.org/shields/admiralvaccine.svg\"\u0026gt;](https://pharmaverse.org) cards  [\u0026lt;img src=\"http://pharmaverse.org/shields/cards.svg\"\u0026gt;](https://pharmaverse.org) chevron  [\u0026lt;img src=\"http://pharmaverse.org/shields/chevron.svg\"\u0026gt;](https://pharmaverse.org) covtracer  [\u0026lt;img src=\"http://pharmaverse.org/shields/covtracer.svg\"\u0026gt;](https://pharmaverse.org) datacutr  [\u0026lt;img src=\"http://pharmaverse.org/shields/datacutr.svg\"\u0026gt;](https://pharmaverse.org) datasetjson  [\u0026lt;img src=\"http://pharmaverse.org/shields/datasetjson.svg\"\u0026gt;](https://pharmaverse.org) envsetup  [\u0026lt;img src=\"http://pharmaverse.org/shields/envsetup.svg\"\u0026gt;](https://pharmaverse.org) falcon  [\u0026lt;img src=\"http://pharmaverse.org/shields/falcon.svg\"\u0026gt;](https://pharmaverse.org) ggsurvfit  [\u0026lt;img src=\"http://pharmaverse.org/shields/ggsurvfit.svg\"\u0026gt;](https://pharmaverse.org) logrx  [\u0026lt;img src=\"http://pharmaverse.org/shields/logrx.svg\"\u0026gt;](https://pharmaverse.org) metacore  [\u0026lt;img src=\"http://pharmaverse.org/shields/metacore.svg\"\u0026gt;](https://pharmaverse.org) metatools  [\u0026lt;img src=\"http://pharmaverse.org/shields/metatools.svg\"\u0026gt;](https://pharmaverse.org) pharmaRTF  [\u0026lt;img src=\"http://pharmaverse.org/shields/pharmaRTF.svg\"\u0026gt;](https://pharmaverse.org) pharmaverseadam  [\u0026lt;img src=\"http://pharmaverse.org/shields/pharmaverseadam.svg\"\u0026gt;](https://pharmaverse.org) pharmaversesdtm  [\u0026lt;img src=\"http://pharmaverse.org/shields/pharmaversesdtm.svg\"\u0026gt;](https://pharmaverse.org) pkglite  [\u0026lt;img src=\"http://pharmaverse.org/shields/pkglite.svg\"\u0026gt;](https://pharmaverse.org) rhino  [\u0026lt;img src=\"http://pharmaverse.org/shields/rhino.svg\"\u0026gt;](https://pharmaverse.org) riskassessment  [\u0026lt;img src=\"http://pharmaverse.org/shields/riskassessment.svg\"\u0026gt;](https://pharmaverse.org) riskmetric  [\u0026lt;img src=\"http://pharmaverse.org/shields/riskmetric.svg\"\u0026gt;](https://pharmaverse.org) rlistings  [\u0026lt;img src=\"http://pharmaverse.org/shields/rlistings.svg\"\u0026gt;](https://pharmaverse.org) roak  [\u0026lt;img src=\"http://pharmaverse.org/shields/roak.svg\"\u0026gt;](https://pharmaverse.org) rtables  [\u0026lt;img src=\"http://pharmaverse.org/shields/rtables.svg\"\u0026gt;](https://pharmaverse.org) sdtmchecks  [\u0026lt;img src=\"http://pharmaverse.org/shields/sdtmchecks.svg\"\u0026gt;](https://pharmaverse.org) teal  [\u0026lt;img src=\"http://pharmaverse.org/shields/teal.svg\"\u0026gt;](https://pharmaverse.org) tern  [\u0026lt;img src=\"http://pharmaverse.org/shields/tern.svg\"\u0026gt;](https://pharmaverse.org) tfrmt  [\u0026lt;img src=\"http://pharmaverse.org/shields/tfrmt.svg\"\u0026gt;](https://pharmaverse.org) tfrmtbuilder  [\u0026lt;img src=\"http://pharmaverse.org/shields/tfrmtbuilder.svg\"\u0026gt;](https://pharmaverse.org) thevalidatoR  [\u0026lt;img src=\"http://pharmaverse.org/shields/thevalidatoR.svg\"\u0026gt;](https://pharmaverse.org) tidyCDISC  [\u0026lt;img src=\"http://pharmaverse.org/shields/tidyCDISC.svg\"\u0026gt;](https://pharmaverse.org) tidytlg  [\u0026lt;img src=\"http://pharmaverse.org/shields/tidytlg.svg\"\u0026gt;](https://pharmaverse.org) Tplyr  [\u0026lt;img src=\"http://pharmaverse.org/shields/Tplyr.svg\"\u0026gt;](https://pharmaverse.org) valtools  [\u0026lt;img src=\"http://pharmaverse.org/shields/valtools.svg\"\u0026gt;](https://pharmaverse.org) xportr  [\u0026lt;img src=\"http://pharmaverse.org/shields/xportr.svg\"\u0026gt;](https://pharmaverse.org)      "},{"url":"https://pharmaverse.org/e2eclinical/metadata/","title":"Metadata","description":"","content":" metacore         Provides an interface to read in various metadata sources and store in a standardized object\n metatools         Enables the use of metacore objects to build, enhance or check datasets using metadata - including removing/adding supplemental qualifiers from/to the parent SDTM domain\n "},{"url":"https://pharmaverse.org/opensource/","title":"Other Open Sourcing","description":"Further open source resources useful for either R enablement or beyond.","content":"Please find below some links to other useful resources around supporting open sourcing to help the industry with clinical reporting.\nWorking groups  PHUSE Working Groups supporting industry adoption of open source technology, such as by assessing the fundamental differences in statistical analysis results across languages and how we can mitigate such risk and maintain confidence in open source languages. R Consortium Working Groups focused around industry R enablement, such as by working with FDA to pilot fully R-based submissions. R Validation Hub designing a framework that assesses the quality of an R package and considering topics around R package validation in accordance with regulatory standards. TransCelerate Modernization of Statistical Analytics project aiming to analyze methods for considering and validating novel statistical computing platforms to propose to Health Authorities. Software Engineering Working Group engineers selected statistical R-packages and promotes good software engineering practices in the biostatistics community and beyond.  Conferences  R/Pharma is a non-profit, free, yearly conference that brings together the R users in Pharma and is the primary focal point for the R developer community in Pharma.  Open source incubators  R Consortium is a non-profit that supports the use and development of R. Within the R Consortium is the Pharma Oversight Commitee, which helps to identify and address Pharma related gaps in the R language. The R Consortium also gives out grants to fund open source projects, and contributes funding to some high level projects relevant to Pharma like DBI and R Core. CDISC Open-Source Alliance (COSA) supports, promotes, and sometimes sponsors open source software projects that create tools for implementing or developing CDISC standards to drive innovation in the CDISC community. An example of open source work being led out of CDISC would be CORE, where the objective is to provide an open source executable suite of CDISC conformance checks. github.com/openpharma A github organisation founded by Novartis and Roche that is happy to host any repo that needs a home. No opinions or controls are placed on repos added, beyond the initial threshold the repo being added is coming from Pharma and for Pharma.  Open source project portals  openpharma.pharmaverse.org A non-opinionated companion to the pharmaverse that contains a dashboard and crawler that tracks \u0026gt;200 R and Python packages built by Pharma for Pharma, with a focus on capturing metrics and helping would-be open source contributors find areas to support. The daily builds of metadata generated by openpharma are used throughout the pharmaverse website. A vendor managed collection of open source solutions, programs and scripts for clinical study evaluations covering numerous programming languages, maintained by Katja Glass.  If you find any other useful open source resources that you think should be included here, then please don\u0026rsquo;t hesitate to reach out to one of our council reps, use the contact bot in this site, or propose your suggestion directly to the community using this form.\n"},{"url":"https://pharmaverse.org/e2eclinical/utility/","title":"Utility","description":"","content":" logrx         Generates an execution log to support reproducibility and traceability of an R script\n envsetup       Support the setup of an R environment\n datasetjson     Read and write CDISC Dataset JSON files (PACKAGE CURRENTLY EXPERIMENTAL)\n diffdf     The diffdf package is designed to enable detailed comparison of two data.frames.\n "},{"url":"https://pharmaverse.org/e2eclinical/developers/","title":"Developers","description":"","content":"This section of our pharmaverse recommended list is dedicated to those packages less relevant for individual clinical reporting end users, and instead more relevant to other roles such as package developers or admins maintaining package repositories.\nPackage Validation Validation and qualification are two important topics in regulatory interactions. For R package validation, there are example tools like covtracer to automate via CI/CD tools validation (and re-validation) of packages once we feel the quality of their documentation and unit testing is sufficient. thevalidatoR represents a simplified version of this approach. There are also packages to support decisions around risk assessment when approaching validation strategy for R packages.\ncovtracer       Automated tracing of code coverage via a network of test execution, linking tests to code \u0026amp; code to documentation. This package is used to provide the tracebility matrix for CICD based validation.  valtools       Validation framework for R packages that allows you to bolt in additional validation documentation.\n riskmetric         Framework to quantify R package risk by assessing a number of meaningful metrics.\n riskassessment       Shiny utility for riskmetric.\n CI/CD Continuous Integration / Continuous Deployment and other DevOps methods can hugely help package developers with efficiency saving, by reducing manual steps.\nUnder the pharmaverse GitHub org we have admiralci which offers re-usable GitHub action workflows that may be useful to any pharmaverse package. Outside of this there is a PHUSE WG looking to broaden this for greater community benefit.\nFor a GitHub specific CI example related to package validation see:\nthevalidatoR       A GitHub action on the GitHub Marketplace to provide standardised build reports for validation. An alternative approach to valtools that relies on the normal R framework for validation.  Synthetic Data Generating CDISC standards synthetic data for use when developing and testing R packages can be a painful but often necessary part of building clinical reporting R packages.\nWe offer the following packages that as a basis re-used SDTM data from the CDISC pilot project, with added therapeutic area specifics such as oncology domains. These have then been ran through {admiral} templates to provide consistent ADaM test data.\npharmaversesdtm     Test data (SDTM) for the pharmaverse family of packages\n pharmaverseadam     Test data (ADaM) for the pharmaverse family of packages\n Developer Utilities {admiraldev} offers numerous developer utilities focused on the {admiral} family of packages, but some could be useful to re-use. Take a look at the reference page to explore further.\n"},{"url":"https://pharmaverse.org/","title":"pharmaverse","description":"","content":""},{"url":"https://pharmaverse.org/categories/","title":"Categories","description":"","content":""},{"url":"https://pharmaverse.org/library/","title":"How to install these packages","description":"Explanation on how to get the pharmaverse packages either individually or via r-universe.org.","content":"Installing for GxP use In an internal regulatory setting, you are likely to have your own agreed package management solutions and your own mirror of CRAN.\nInstalling from r-universe.org We currently also have an r-universe build available for ease of use outside GxP settings.\n# Enable this universe options( repos = c( pharmaverse = \u0026#39;https://pharmaverse.r-universe.dev\u0026#39;, CRAN = \u0026#39;https://cloud.r-project.org\u0026#39; ) ) As of today there are \u0026lt;img src=\u0026#34;https://pharmaverse.r-universe.dev/badges/:total\u0026#34; alt=\u0026#34;:total status badge\u0026#34;\u0026gt; from the pharmaverse hosted in this CRAN-like instance (pharmaverse packages along with package dependencies that are remotes:).\n"},{"url":"https://pharmaverse.org/contact/","title":"Reach out to us","description":"Send a message to the pharmaverse slack","content":""},{"url":"https://pharmaverse.org/search/","title":"Search Result","description":"this is meta description","content":""},{"url":"https://pharmaverse.org/tags/","title":"Tags","description":"","content":""}]